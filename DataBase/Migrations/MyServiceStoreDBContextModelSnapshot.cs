// <auto-generated />
using System;
using DataBase.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataBase.Migrations
{
    [DbContext(typeof(MyServiceStoreDBContext))]
    partial class MyServiceStoreDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Modelos.EF.ClientesModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("EntidadeId")
                        .HasColumnType("int");

                    b.Property<int>("RevendaId")
                        .HasColumnType("int");

                    b.Property<int>("Situacao")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EntidadeId");

                    b.HasIndex("RevendaId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Modelos.EF.Entidade.EntidadeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Endereco")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Situacao")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("TipoEntidade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Entidades");
                });

            modelBuilder.Entity("Modelos.EF.Entidade.IdentificadorEntidadeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CNPJ_CPF")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("EntidadeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EntidadeId");

                    b.ToTable("IdentificadoresEntidade");
                });

            modelBuilder.Entity("Modelos.EF.PlanosLicencaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("RevendaModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RevendaModelId");

                    b.ToTable("PlanosLicencaModel");
                });

            modelBuilder.Entity("Modelos.EF.Revenda.RevendaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("EntidadeId")
                        .HasColumnType("int");

                    b.Property<int>("Situacao")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EntidadeId");

                    b.ToTable("Revendas");
                });

            modelBuilder.Entity("Modelos.EF.Revenda.UsuariosRevendaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("EntidadeId")
                        .HasColumnType("int");

                    b.Property<int>("RevendaId")
                        .HasColumnType("int");

                    b.Property<int>("Situacao")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EntidadeId");

                    b.HasIndex("RevendaId");

                    b.ToTable("UsuariosRevendas");
                });

            modelBuilder.Entity("Modelos.EF.SoftwaresModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("RevendaModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RevendaModelId");

                    b.ToTable("SoftwaresModel");
                });

            modelBuilder.Entity("Modelos.EF.ClientesModel", b =>
                {
                    b.HasOne("Modelos.EF.Entidade.EntidadeModel", "Entidade")
                        .WithMany()
                        .HasForeignKey("EntidadeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Modelos.EF.Revenda.RevendaModel", "Revenda")
                        .WithMany("ClientesList")
                        .HasForeignKey("RevendaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Entidade");

                    b.Navigation("Revenda");
                });

            modelBuilder.Entity("Modelos.EF.Entidade.IdentificadorEntidadeModel", b =>
                {
                    b.HasOne("Modelos.EF.Entidade.EntidadeModel", "Entidade")
                        .WithMany()
                        .HasForeignKey("EntidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entidade");
                });

            modelBuilder.Entity("Modelos.EF.PlanosLicencaModel", b =>
                {
                    b.HasOne("Modelos.EF.Revenda.RevendaModel", null)
                        .WithMany("PlanosLicencaList")
                        .HasForeignKey("RevendaModelId");
                });

            modelBuilder.Entity("Modelos.EF.Revenda.RevendaModel", b =>
                {
                    b.HasOne("Modelos.EF.Entidade.EntidadeModel", "Entidade")
                        .WithMany()
                        .HasForeignKey("EntidadeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Entidade");
                });

            modelBuilder.Entity("Modelos.EF.Revenda.UsuariosRevendaModel", b =>
                {
                    b.HasOne("Modelos.EF.Entidade.EntidadeModel", "Entidade")
                        .WithMany()
                        .HasForeignKey("EntidadeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Modelos.EF.Revenda.RevendaModel", "Revenda")
                        .WithMany("UsuarioRevendaList")
                        .HasForeignKey("RevendaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Entidade");

                    b.Navigation("Revenda");
                });

            modelBuilder.Entity("Modelos.EF.SoftwaresModel", b =>
                {
                    b.HasOne("Modelos.EF.Revenda.RevendaModel", null)
                        .WithMany("SoftwaresList")
                        .HasForeignKey("RevendaModelId");
                });

            modelBuilder.Entity("Modelos.EF.Revenda.RevendaModel", b =>
                {
                    b.Navigation("ClientesList");

                    b.Navigation("PlanosLicencaList");

                    b.Navigation("SoftwaresList");

                    b.Navigation("UsuarioRevendaList");
                });
#pragma warning restore 612, 618
        }
    }
}
